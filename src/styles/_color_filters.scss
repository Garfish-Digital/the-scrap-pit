// Color Filters for The Scrap Pit
// Duotone, Tritone, and Chromatic Displacement Effects

@import 'variables';

// Duotone Filters
.duotone-red-black {
  filter: 
    grayscale(1) 
    contrast(1.2) 
    sepia(1) 
    hue-rotate(315deg) 
    saturate(0.8);
}

.duotone-gold-black {
  filter: 
    grayscale(1) 
    contrast(1.1) 
    sepia(1) 
    hue-rotate(38deg) 
    saturate(0.9);
}

.duotone-white-black {
  filter: 
    grayscale(1) 
    contrast(1.3) 
    brightness(1.1);
}

// Tritone Filters (Black, Red, Gold)
.tritone-combat {
  filter: 
    contrast(1.4) 
    saturate(0.6) 
    sepia(0.3) 
    hue-rotate(10deg);
}

.tritone-intensity {
  filter: 
    contrast(1.2) 
    saturate(0.8) 
    sepia(0.4) 
    hue-rotate(350deg) 
    brightness(0.95);
}

// Monochrome to Color Transition
.mono-to-color {
  filter: grayscale(1) brightness(0.8) contrast(1.2);
  transition: filter $transition-slow;
  
  &.in-view,
  &:hover {
    filter: grayscale(0) brightness(1) contrast(1);
  }
}

// Chromatic Displacement (Glitch Effect)
.chromatic-displacement {
  position: relative;
  overflow: hidden;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: inherit;
    background-size: inherit;
    background-position: inherit;
    mix-blend-mode: multiply;
    opacity: 0;
    transition: opacity $transition-quick;
  }
  
  &::before {
    background-color: $blood-red;
    transform: translate(-2px, 0);
  }
  
  &::after {
    background-color: $championship-gold;
    transform: translate(2px, 0);
  }
  
  &:hover,
  &.active {
    &::before {
      opacity: 0.3;
    }
    
    &::after {
      opacity: 0.2;
    }
  }
}

// Gritty Texture Overlay
.gritty-overlay {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 20% 20%, rgba($iron-black, 0.1) 1px, transparent 1px),
      radial-gradient(circle at 80% 80%, rgba($iron-black, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    pointer-events: none;
    mix-blend-mode: multiply;
  }
}

// Harsh Contrast Filter
.harsh-contrast {
  filter: contrast(1.5) brightness(0.95);
}

// Desaturated Filter
.desaturated {
  filter: saturate(0.3) contrast(1.1);
}

// High Contrast B&W
.high-contrast-bw {
  filter: grayscale(1) contrast(2) brightness(0.9);
}

// Impact Flash Effect
.impact-flash {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $blood-red;
    opacity: 0;
    pointer-events: none;
    transition: opacity $impact-duration;
  }
  
  &.flash,
  &:active {
    &::before {
      opacity: 0.2;
    }
  }
}

// Noise Texture
.noise-texture {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      radial-gradient(circle at 1px 1px, rgba($iron-black, 0.15) 1px, transparent 0);
    background-size: 10px 10px;
    pointer-events: none;
    opacity: 0.3;
  }
}

// Distressed Border Effect
.distressed-border {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, 
      $iron-black 0px, $iron-black 2px, transparent 2px, transparent 4px,
      $iron-black 4px, $iron-black 6px, transparent 6px, transparent 8px
    );
    background-size: 8px 8px;
    z-index: -1;
  }
}

// Brutalist Drop Shadow
.brutalist-shadow {
  box-shadow: $shadow-harsh;
  
  &.accent {
    box-shadow: $shadow-accent;
  }
  
  &.victory {
    box-shadow: $shadow-victory;
  }
}

// Scroll-triggered color reveal
.scroll-reveal {
  &.mono {
    filter: grayscale(1) contrast(1.2) brightness(0.8);
  }
  
  &.color {
    filter: grayscale(0) contrast(1) brightness(1);
  }
}

// Hover effects for interactive elements
.hover-impact {
  transition: all $transition-quick;
  
  &:hover {
    transform: scale($impact-scale);
    filter: brightness(1.1) contrast(1.1);
  }
}

.hover-displace {
  transition: all $transition-quick;
  
  &:hover {
    transform: translate(2px, -2px);
    box-shadow: $shadow-harsh;
  }
}